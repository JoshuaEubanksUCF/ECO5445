diabetes <- c("Type1", "Type2", "Type1", "Type1")
status <- c("Poor", "Improved", "Excellent", "Poor")
patientdata <- data.frame(patientID, age, diabetes,
status)
patientdata
View(patientdata)
View(x)
View(x)
View(y)
View(y)
View(mymatrix)
View(mymatrix)
View(z)
dim1 <- c("A1", "A2")
dim2 <- c("B1", "B2", "B3")
dim3 <- c("C1", "C2", "C3", "C4")
z <- array(1:24, c(2, 3, 4), dimnames = list(dim1,
dim2, dim3))
z
patientdata[1:2]
patientdata[c("diabetes", "status")]
patientdata$age
View(patientdata)
patientID <- c(1, 2, 3, 4)
age <- c(25, 34, 28, 52)
diabetes <- c("Type1", "Type2", "Type1", "Type1")
status <- c("Poor", "Improved", "Excellent", "Poor")
diabetes <- factor(diabetes)
status <- factor(status, order = TRUE)
patientdata <- data.frame(patientID, age, diabetes,
status)
patientID <- c(1, 2, 3, 4)
age <- c(25, 34, 28, 52)
diabetes <- c("Type1", "Type2", "Type1", "Type1")
status <- c("Poor", "Improved", "Excellent", "Poor")
diabetes <- factor(diabetes)
levels(diabetes)
status <- factor(status, order = TRUE)
levels(status)
patientdata <- data.frame(patientID, age, diabetes,
status)
View(patientdata)
str(patientdata)
summary(patientdata)
patientID <- c(1, 2, 3, 4)
age <- c(25, 34, 28, 52)
diabetes <- c("Type1", "Type2", "Type1", "Type1")
status <- c("Poor", "Improved", "Excellent", "Poor")
patientdata <- data.frame(patientID, age, diabetes,
status)
patientdata
summary(patientdata)
patientID <- c(1, 2, 3, 4)
age <- c(25, 34, 28, 52)
diabetes <- c("Type1", "Type2", "Type1", "Type1")
status <- c("Poor", "Improved", "Excellent", "Poor")
diabetes <- factor(diabetes)
status <- factor(status, order = TRUE)
patientdata <- data.frame(patientID, age, diabetes,
status)
summary(patientdata)
badVector <- c("Hello", 1)
g <- "My First List"
h <- c(25, 26, 18, 39)
j <- matrix(1:10, nrow = 5)
k <- c("one", "two", "three")
mylist <- list(title = g, ages = h, j, k)
mylist
str(patientdata)
mylist$title
mylist$ages
mylist[4]
mylist[4][2]
mylist[4][1]
mylist[4][1][1]
mylist[4][[1]]
mylist[4][[1]][1]
mylist[4]
mylist[4][[1]][2]
par(ask = TRUE)
attach(mtcars)
plot(wt, mpg)
plot(wt, mpg)
abline(lm(mpg ~ wt))
plot(wt, mpg)
abline(lm(mpg ~ wt))
title("Regression of MPG on Weight")
plot(wt, mpg)
plot(wt, mpg)
abline(lm(mpg ~ wt))
title("Regression of MPG on Weight")
plot(wt, mpg)
abline(lm(mpg ~ wt))
title("Regression of MPG on Weight")
detach(mtcars)
attach(mtcars)
detach(mtcars)
dose <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
plot(dose, drugA, type = "b")
?plot
?plot(dose, drugA, type = "o")
plot(dose, drugA, type = "o")
plot(dose, drugA, type = "b", lty = 2, pch = 17)
plot(dose, drugA, type = "b", lty = 2, pch = 8)
plot(dose, drugA, type = "b", lty = 3, lwd = 3, pch = 15,
cex = 2)
plot(dose, drugA, type = "b", lty = 3, lwd = 10, pch = 15,
cex = 2)
plot(dose, drugA, type = "b", lty = 3, lwd = 10, pch = 15,
cex = 0.004)
plot(dose, drugA, type = "b", lty = 3, lwd = 10, pch = 15,
cex = 0.4)
plot(dose, drugA, type = "b", lty = 3, lwd = 2, pch = 15,
cex = 0.4)
plot(dose, drugA, type = "b", lty = 3, lwd = 2, pch = 15,
cex = 10)
n <- 10
mycolors <- rainbow(n)
mycolors
pie(rep(1, n), labels = mycolors, col = mycolors)
n <- 2
mycolors <- rainbow(n)
pie(rep(1, n), labels = mycolors, col = mycolors)
n <- 100
mycolors <- rainbow(n)
pie(rep(1, n), labels = mycolors, col = mycolors)
pie(rep(1, n), col = mycolors)
n <- 10
mycolors <- rainbow(n)
pie(rep(1, n), labels = mycolors, col = mycolors)
mygrays <- gray(0:n/n)
pie(rep(1, n), labels = mygrays, col = mygrays)
dose <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
opar <- par(no.readonly = TRUE)
View(opar)
par(pin = c(2, 3))
par(lwd = 2, cex = 1.5)
par(cex.axis = 0.75, font.axis = 3)
plot(dose, drugA, type = "b", pch = 19, lty = 2, col = "red")
plot(dose, drugB, type = "b", pch = 23, lty = 6, col = "blue",
bg = "green")
newpar <- par(readonly = TRUE)
View(newpar)
newpar <- par(no.readonly = TRUE )
View(newpar)
newpar <- par(no.readonly = TRUE )
par(opar)
plot(dose, drugA, type = "b", col = "red", lty = 2,
pch = 2, lwd = 2, main = "Clinical Trials for Drug A",
sub = "This is hypothetical data",
xlab = "Dosage", ylab = "Drug Response", xlim = c(0, 60),
ylim = c(0, 70))
plot(dose, drugA, type = "b", col = "red", lty = 2,
pch = 2, lwd = 2, main = "Clinical Trials for Drug A",
sub = "This is hypothetical data",
xlab = "Dosage", ylab = "Drug Response", xlim = c(0, 60),
ylim = c(20, 30))
x <- c(1:10)
y <- x
z <- 10/x
opar <- par(no.readonly = TRUE)
par(mar = c(5, 4, 4, 8) + 0.1)
plot(x, y, type = "b", pch = 21, col = "red", yaxt = "n",
lty = 3, ann = FALSE)
plot(x, y, type = "b", pch = 21, col = "red", yaxt = "n",
lty = 3, ann = FALSE)
lines(x, z, type = "b", pch = 22, col = "blue", lty = 2)
plot(x, y, type = "b", pch = 21, col = "red", yaxt = "n",
lty = 3, ann = FALSE)
lines(x, z, type = "b", pch = 22, col = "blue", lty = 2)
axis(2, at = x, labels = x, col.axis = "red", las = 2)
plot(x, y, type = "b", pch = 21, col = "red", yaxt = "n",
lty = 3, ann = FALSE)
lines(x, z, type = "b", pch = 22, col = "blue", lty = 2)
axis(2, at = x, labels = x, col.axis = "red", las = 2)
axis(4, at = z, labels = round(z, digits = 2), col.axis = "blue",
las = 2, cex.axis = 0.7, tck = -0.01)
plot(x, y, type = "b", pch = 21, col = "red", yaxt = "n",
lty = 3, ann = FALSE)
lines(x, z, type = "b", pch = 22, col = "blue", lty = 2)
axis(2, at = x, labels = x, col.axis = "red", las = 2)
axis(3, at = z, labels = round(z, digits = 2), col.axis = "blue",
las = 2, cex.axis = 0.7, tck = -0.01)
axis(4, at = z, labels = round(z, digits = 2), col.axis = "blue",
las = 2, cex.axis = 0.7, tck = -0.01)
plot(x, y, type = "b", pch = 21, col = "red", yaxt = "n",
lty = 3, ann = FALSE)
lines(x, z, type = "b", pch = 22, col = "blue", lty = 2)
axis(2, at = x, labels = x, col.axis = "red", las = 2)
axis(4, at = z, labels = round(z, digits = 2), col.axis = "blue",
las = 2, cex.axis = 0.7, tck = -0.01)
plot(x, y, type = "b", pch = 21, col = "red", yaxt = "n",
lty = 3, ann = FALSE)
lines(x, z, type = "b", pch = 22, col = "blue", lty = 2)
axis(2, at = x, labels = x, col.axis = "red", las = 2)
axis(4, at = z, labels = round(z, digits = 2), col.axis = "blue",
las = 2, cex.axis = 0.7, tck = -0.01)
mtext("y=1/x", side = 4, line = 3, cex.lab = 1, las = 2,
col = "blue")
plot(x, y, type = "b", pch = 21, col = "red", yaxt = "n",
lty = 3, ann = FALSE)
lines(x, z, type = "b", pch = 22, col = "blue", lty = 2)
axis(2, at = x, labels = x, col.axis = "red", las = 2)
axis(4, at = z, labels = round(z, digits = 2), col.axis = "blue",
las = 2, cex.axis = 0.7, tck = -0.01)
mtext("y=1/x", side = 4, line = 3, cex.lab = 1, las = 2,
col = "blue")
title("An Example of Creative Axes", xlab = "X values",
ylab = "Y=X")
par(opar)
dose <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
opar <- par(no.readonly = TRUE)
par(lwd = 2, cex = 1.5, font.lab = 2)
plot(dose, drugA, type = "b", pch = 15, lty = 1, col = "red",
ylim = c(0, 60), main = "Drug A vs. Drug B", xlab = "Drug Dosage",
ylab = "Drug Response")
plot(dose, drugA, type = "b", pch = 15, lty = 1, col = "red",
ylim = c(0, 60), main = "Drug A vs. Drug B", xlab = "Drug Dosage",
ylab = "Drug Response")
lines(dose, drugB, type = "b", pch = 17, lty = 2,
col = "blue")
plot(dose, drugA, type = "b", pch = 15, lty = 1, col = "red",
ylim = c(0, 60), main = "Drug A vs. Drug B", xlab = "Drug Dosage",
ylab = "Drug Response")
lines(dose, drugB, type = "b", pch = 17, lty = 2,
col = "blue")
abline(h = c(30), lwd = 1.5, lty = 2, col = "grey")
plot(dose, drugA, type = "p", pch = 15, lty = 1, col = "red",
ylim = c(0, 60), main = "Drug A vs. Drug B", xlab = "Drug Dosage",
ylab = "Drug Response")
lines(dose, drugB, type = "b", pch = 17, lty = 2,
col = "blue")
abline(h = c(30), lwd = 1.5, lty = 2, col = "grey")
plot(dose, drugA, type = "o", pch = 15, lty = 1, col = "red",
ylim = c(0, 60), main = "Drug A vs. Drug B", xlab = "Drug Dosage",
ylab = "Drug Response")
lines(dose, drugB, type = "b", pch = 17, lty = 2,
col = "blue")
abline(h = c(30), lwd = 1.5, lty = 2, col = "grey")
par(opar)
attach(mtcars)
plot(wt, mpg, main = "Milage vs. Car Weight", xlab = "Weight",
ylab = "Mileage", pch = 18, col = "blue")
row.names(mtcars)
plot(wt, mpg, main = "Milage vs. Car Weight", xlab = "Weight",
ylab = "Mileage", pch = 18, col = "blue")
text(wt, mpg, row.names(mtcars), cex = 0.6, pos = 4,
col = "red")
detach(mtcars)
opar <- par(no.readonly = TRUE)
par(cex = 1.5)
plot(1:7, 1:7, type = "n")
text(3, 3, "Example of default text")
plot(1:7, 1:7, type = "n")
text(3, 3, "Example of default text")
text(4, 4, family = "mono", "Example of mono-spaced text")
plot(1:7, 1:7, type = "n")
text(3, 3, "Example of default text")
text(4, 4, family = "mono", "Example of mono-spaced text")
text(5, 5, family = "serif", "Example of serif text")
par(opar)
attach(mtcars)
opar <- par(no.readonly = TRUE)
par(mfrow = c(2, 2))
plot(wt, mpg, main = "Scatterplot of wt vs. mpg")
plot(wt, disp, main = "Scatterplot of wt vs disp")
hist(wt, main = "Histogram of wt")
boxplot(wt, main = "Boxplot of wt")
par(mfrow = c(2, 2))
plot(wt, mpg, main = "Scatterplot of wt vs. mpg")
plot(wt, disp, main = "Scatterplot of wt vs disp")
hist(wt, main = "Histogram of wt")
boxplot(wt, main = "Boxplot of wt")
help(mtcars)
hist(wt, main = "Histogram of wt")
plot(wt, mpg, main = "Scatterplot of wt vs. mpg")
plot(wt, disp, main = "Scatterplot of wt vs disp")
hist(wt, main = "Histogram of wt")
boxplot(wt, main = "Boxplot of wt")
par(mfrow = c(2, 2))
plot(wt, mpg, main = "Scatterplot of wt vs. mpg")
plot(wt, disp, main = "Scatterplot of wt vs disp")
hist(wt, main = "Histogram of wt")
boxplot(wt, main = "Boxplot of wt")
par(opar)
detach(mtcars)
attach(mtcars)
opar <- par(no.readonly = TRUE)
par(mfrow = c(3, 1))
hist(wt)
hist(mpg)
hist(disp)
par(opar)
detach(mtcars)
matrix(c(1, 1, 2, 3), 2, 2, byrow = TRUE)
layout(matrix(c(1, 1, 2, 3), 2, 2, byrow = TRUE))
hist(wt)
attach(mtcars)
layout(matrix(c(1, 1, 2, 3), 2, 2, byrow = TRUE))
hist(wt)
hist(mpg)
hist(disp)
layout(matrix(c(1, 1, 2, 3), 2, 2))
layout(matrix(c(1, 1, 2, 3), 2, 2))
hist(wt)
hist(mpg)
hist(disp)
matrix(c(1, 1, 2, 3), 2, 2)
layout(matrix(c(1, 1, 2, 3), 2, 2))
hist(mpg)
hist(wt)
hist(disp)
attach(mtcars)
layout(matrix(c(1, 1, 2, 3), 2, 2, byrow = TRUE),
widths = c(3, 1), heights = c(1, 2))
hist(wt)
attach(mtcars)
layout(matrix(c(1, 1, 2, 3), 2, 2, byrow = TRUE),
widths = c(3, 1), heights = c(1, 2))
hist(wt)
layout(matrix(c(1, 1, 2, 3), 2, 2, byrow = TRUE),
widths = c(3, 1), heights = c(1, 2))
hist(wt)
opar <- par(no.readonly = TRUE)
opar <- par(no.readonly = TRUE)
par(fig = c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab = "Miles Per Gallon",
ylab = "Car Weight")
par(fig = c(0, 0.8, 0.55, 1), new = TRUE)
boxplot(mtcars$wt, horizontal = TRUE, axes = FALSE)
par(fig = c(0.65, 1, 0, 0.8), new = TRUE)
boxplot(mtcars$mpg, axes = FALSE)
mtext("Enhanced Scatterplot", side = 3, outer = TRUE,
line = -3)
par(opar)
opar <- par(no.readonly = TRUE)
par(fig = c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab = "Miles Per Gallon",
ylab = "Car Weight")
par(fig = c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab = "Miles Per Gallon",
ylab = "Car Weight")
par(fig = c(0, 0.8, 0.55, 1), new = TRUE)
boxplot(mtcars$wt, horizontal = TRUE, axes = FALSE)
par(fig = c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab = "Miles Per Gallon",
ylab = "Car Weight")
par(fig = c(0, 0.8, 0.55, 1), new = TRUE)
boxplot(mtcars$wt, horizontal = TRUE, axes = FALSE)
par(fig = c(0.65, 1, 0, 0.8), new = TRUE)
boxplot(mtcars$mpg, axes = FALSE)
par(fig = c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab = "Miles Per Gallon",
ylab = "Car Weight")
par(fig = c(0, 0.8, 0.55, 1), new = TRUE)
boxplot(mtcars$wt, horizontal = TRUE, axes = FALSE)
par(fig = c(0.65, 1, 0, 0.8), new = TRUE)
boxplot(mtcars$mpg, axes = FALSE)
mtext("Enhanced Scatterplot", side = 3, outer = TRUE,
line = -3)
par(fig = c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab = "Miles Per Gallon",
ylab = "Car Weight")
par(fig = c(0, 0.8, 0.55, 1), new = TRUE)
boxplot(mtcars$wt, horizontal = TRUE, axes = FALSE)
par(fig = c(0.65, 2, 0, 0.8), new = TRUE)
par(fig = c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab = "Miles Per Gallon",
ylab = "Car Weight")
par(fig = c(0, 0.8, 0.55, 1), new = TRUE)
boxplot(mtcars$wt, horizontal = TRUE, axes = FALSE)
par(fig = c(0.65, .5, 0, 0.8), new = TRUE)
c(0.65, 1, 0, 0.8)
?par
par(fig = c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab = "Miles Per Gallon",
ylab = "Car Weight")
par(fig = c(0, 0.8, 0.55, 1), new = TRUE)
boxplot(mtcars$wt, horizontal = TRUE, axes = FALSE)
par(fig = c(0.65, .9, 0, 0.8), new = TRUE)
boxplot(mtcars$mpg, axes = FALSE)
par(fig = c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab = "Miles Per Gallon",
ylab = "Car Weight")
par(fig = c(0, 0.8, 0.55, 1), new = TRUE)
boxplot(mtcars$wt, horizontal = TRUE, axes = FALSE)
par(fig = c(0.65, .6, 0, 0.8), new = TRUE)
par(fig = c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab = "Miles Per Gallon",
ylab = "Car Weight")
par(fig = c(0, 0.8, 0.55, 1), new = TRUE)
boxplot(mtcars$wt, horizontal = TRUE, axes = FALSE)
par(fig = c(0.65, .65, 0, 0.8), new = TRUE)
par(fig = c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab = "Miles Per Gallon",
ylab = "Car Weight")
par(fig = c(0, 0.8, 0.55, 1), new = TRUE)
boxplot(mtcars$wt, horizontal = TRUE, axes = FALSE)
par(fig = c(0.65, .85, 0, 0.8), new = TRUE)
x <- 1:20
x <- 20
if (x > 10) {
print("Bigger than 20")
}
if (x > 10) {
print("x is Bigger than 20")
}
x <- 10
if (x > 10) {
print("x is Bigger than 20")
}
if (x > 10) {
print("x is Bigger than 20")
} else {
print("x is not bigger than 10")
}
if (x > 10) {
print("x is Bigger than 20")
print("cool")
}
x <- 11
if (x > 10) {
print("x is Bigger than 20")
print("cool")
}
if (x > 10) {
print("x is Bigger than 20")
print("cool")
}
x <- 10
if (x > 10) {
print("x is Bigger than 20")
print("cool")
} else if (x == 10) {
print("x equals 10")
} else {
print("x is not bigger than 10")
}
x <- 1:20
if (x > 10) {
print("x is Bigger than 20")
print("cool")
} else if (x == 10) {
print("x equals 10")
} else {
print("x is not bigger than 10")
}
length(x)
1:length(x)
for (ham in 1:length(x)) {
if (ham > 10) {
print("x is Bigger than 20")
print("cool")
} else if (ham == 10) {
print("x equals 10")
} else {
print("x is not bigger than 10")
}
}
for (ham in 1:length(x)) {
if (ham > 10) {
print("x is Bigger than 20")
} else if (ham == 10) {
print("x equals 10")
} else {
print("x is not bigger than 10")
}
}
for (ham in 1:length(x)) {
if (ham > 10) {
x[ham] <- 1
} else if (ham == 10) {
x[ham] <- 2
} else {
x[ham] <- 3
}
}
x
x <- 1:20
x>10
x[x>10]
x[x>10] <- 1
x[x==10] <- 2
x[x<10] <- 3
x
x[x>10] <- 1
x
x <- 1:20
x[x>10] <- 1
x
x[x==10]
x[x==10] <- 2
x
x[x<10] <- 3
x
x <- runif(10000)
x[x>=0.5] <- "Round up"
x[x<=0.5] <- "Round down"
x
for (ham in 1:length(x)) {
if (ham >= .5) {
x[ham] <- "Round up"
} else {
x[ham] <- "Round down"
}
}
